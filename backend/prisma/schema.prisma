// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
  PROVIDER
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  phone     String?
  city      String?
  country   String
  password  String
  role      Role     @default(USER)
  trips     Trip[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  avatarUrl String?
  Rating    Rating[]
}

model Trip {
  id          String   @id @default(uuid())
  userId      String
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
  coverPhoto  String?
  stops       Stop[]
  budget      Budget?
  isPublic    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rating      Rating[]

  user User @relation(fields: [userId], references: [id])
}

model Rating {
  id        String   @id @default(uuid())
  tripId    String
  userId    String
  score     Int // e.g. 1-5 stars
  comment   String? // optional feedback
  createdAt DateTime @default(now())

  trip Trip @relation(fields: [tripId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([tripId, userId]) // one rating per user per trip
}

model Stop {
  id         String     @id @default(uuid())
  tripId     String
  city       String
  country    String?
  startDate  DateTime
  endDate    DateTime
  activities Activity[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  trip Trip @relation(fields: [tripId], references: [id])
}

model Activity {
  id          String   @id @default(uuid())
  stopId      String
  name        String
  description String?
  category    String? // e.g., sightseeing, food, adventure
  cost        Float? // estimated cost
  duration    Int? // in minutes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  stop Stop @relation(fields: [stopId], references: [id])
}

model Budget {
  id             String @id @default(uuid())
  tripId         String @unique
  transportCost  Float  @default(0)
  stayCost       Float  @default(0)
  activitiesCost Float  @default(0)
  mealsCost      Float  @default(0)
  totalCost      Float  @default(0)

  trip Trip @relation(fields: [tripId], references: [id])
}
